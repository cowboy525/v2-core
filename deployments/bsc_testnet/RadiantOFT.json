{
  "address": "0x20d9C60d0d5985fE56104f8B1fd68A191137FE5E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_endpoint",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMintAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dao",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "FeeInfoUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "MessageFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPriceProvider",
          "name": "_priceProvider",
          "type": "address"
        }
      ],
      "name": "PriceProviderUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_toAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ReceiveFromChain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "_toAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "SendToChain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_type",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_dstGasAmount",
          "type": "uint256"
        }
      ],
      "name": "SetMinDstGasLookup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_useCustomAdapterParams",
          "type": "bool"
        }
      ],
      "name": "SetUseCustomAdapterParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUNCTION_TYPE_SEND",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_EXTRA_GAS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "destChainId",
          "type": "uint16"
        }
      ],
      "name": "bridge",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circulatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_toAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_useZro",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "estimateSendFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nativeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "zroFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee_ratio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rdntAmount",
          "type": "uint256"
        }
      ],
      "name": "getBridgeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "isTrustedRemote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lzEndpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "minDstGasLookup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "nonblockingLzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "pauseBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProvider",
      "outputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "retryMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_toAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_refundAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zroPaymentAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "sendFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setFeeInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_type",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dstGasAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinDstGasLookup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "_priceProvider",
          "type": "address"
        }
      ],
      "name": "setPriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_useCustomAdapterParams",
          "type": "bool"
        }
      ],
      "name": "setUseCustomAdapterParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "trustedRemoteLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "useCustomAdapterParams",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4dcd67591104afda0265928325e6e686f9a9a15dc9779bec58d4db802b4cf4c9",
  "receipt": {
    "to": null,
    "from": "0xA3De96858FD006fd978eA2D55Efe6b125012f485",
    "contractAddress": "0x20d9C60d0d5985fE56104f8B1fd68A191137FE5E",
    "transactionIndex": 2,
    "gasUsed": "4082285",
    "logsBloom": "0x
    "blockHash": "0xa1c6d36fecdbfd07dbf990a58badfd4285eea1da12c3ee6daed039a29645c552",
    "transactionHash": "0x4dcd67591104afda0265928325e6e686f9a9a15dc9779bec58d4db802b4cf4c9",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27738311,
        "transactionHash": "0x4dcd67591104afda0265928325e6e686f9a9a15dc9779bec58d4db802b4cf4c9",
        "address": "0x20d9C60d0d5985fE56104f8B1fd68A191137FE5E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a3de96858fd006fd978ea2d55efe6b125012f485"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xa1c6d36fecdbfd07dbf990a58badfd4285eea1da12c3ee6daed039a29645c552"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 27738311,
        "transactionHash": "0x4dcd67591104afda0265928325e6e686f9a9a15dc9779bec58d4db802b4cf4c9",
        "address": "0x20d9C60d0d5985fE56104f8B1fd68A191137FE5E",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a3de96858fd006fd978ea2d55efe6b125012f485"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 3,
        "blockHash": "0xa1c6d36fecdbfd07dbf990a58badfd4285eea1da12c3ee6daed039a29645c552"
      }
    ],
    "blockNumber": 27738311,
    "cumulativeGasUsed": "4235137",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Supernova2",
    "NOVA2",
    "0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1",
    "1000000000000000000000000000",
    "100000000000000000000000000",
    "100",
    "0xB00bDAb497D25861163b7F1b279B809bCCfc2d46",
    "0xA3De96858FD006fd978eA2D55Efe6b125012f485"
  ],
  "numDeployments": 1,
  "solcInputHash": "78995fe69be866012cdea8ea4c4842de",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"FeeInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPriceProvider\",\"name\":\"_priceProvider\",\"type\":\"address\"}],\"name\":\"PriceProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ReceiveFromChain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SendToChain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dstGasAmount\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGasLookup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"SetUseCustomAdapterParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FUNCTION_TYPE_SEND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_EXTRA_GAS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"destChainId\",\"type\":\"uint16\"}],\"name\":\"bridge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_useZro\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateSendFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee_ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rdntAmount\",\"type\":\"uint256\"}],\"name\":\"getBridgeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvider\",\"outputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"sendFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setFeeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstGasAmount\",\"type\":\"uint256\"}],\"name\":\"setMinDstGasLookup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"_priceProvider\",\"type\":\"address\"}],\"name\":\"setPriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useCustomAdapterParams\",\"type\":\"bool\"}],\"name\":\"setUseCustomAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useCustomAdapterParams\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Radiant Labs\",\"details\":\"All function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"bridge(uint256,uint16)\":{\"params\":{\"amt\":\"Amount of RDNT\",\"destChainId\":\"Destination chain ID\"}},\"burn(uint256)\":{\"params\":{\"_value\":\"is amount to burn\"}},\"circulatingSupply()\":{\"details\":\"returns the circulating amount of tokens on current chain\"},\"constructor\":{\"params\":{\"_dao\":\"dao address\",\"_endpoint\":\"LZ endpoint\",\"_fee\":\"fee ratio\",\"_maxMintAmount\":\"max token mint amount\",\"_maxSupply\":\"max token supply\",\"_symbol\":\"token symbol\",\"_tokenName\":\"token name\",\"_treasury\":\"treasury address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getBridgeFee(uint256)\":{\"params\":{\"rdntAmount\":\"amount for bridge\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint()\":{\"details\":\"Can be called only once\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseBridge(bool)\":{\"params\":{\"pause\":\"option\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sendFrom(address,uint16,bytes,uint256,address,address,bytes)\":{\"details\":\"This adds extra bridge fees\"},\"setFeeInfo(uint256,address)\":{\"params\":{\"_fee\":\"ratio\",\"_treasury\":\"address\"}},\"setPriceProvider(address)\":{\"params\":{\"_priceProvider\":\"address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Radiant Token\",\"version\":1},\"userdoc\":{\"events\":{\"FeeInfoUpdated(uint256,address)\":{\"notice\":\"Emitted when fee ratio is updated\"},\"PriceProviderUpdated(address)\":{\"notice\":\"Emitted when PriceProvider is updated\"}},\"kind\":\"user\",\"methods\":{\"FEE_DIVISOR()\":{\"notice\":\"Divisor for fee ratio, 100%\"},\"bridge(uint256,uint16)\":{\"notice\":\"Bridge token\"},\"burn(uint256)\":{\"notice\":\"Burn tokens of `msg.sender`\"},\"constructor\":{\"notice\":\"Constructor\"},\"dao()\":{\"notice\":\"DAO address\"},\"estimateSendFee(uint16,bytes,uint256,bool,bytes)\":{\"notice\":\"Returns LZ fee + Bridge fee\"},\"fee_ratio()\":{\"notice\":\"Fee ratio for bridging\"},\"getBridgeFee(uint256)\":{\"notice\":\"Bridge fee amount\"},\"maxMintAmount()\":{\"notice\":\"Max mint amount of token\"},\"maxSupply()\":{\"notice\":\"Max supply of token\"},\"mint()\":{\"notice\":\"Mint tokens to dao\"},\"pauseBridge(bool)\":{\"notice\":\"Pause/Unpause operations\"},\"priceProvider()\":{\"notice\":\"PriceProvider address\"},\"sendFrom(address,uint16,bytes,uint256,address,address,bytes)\":{\"notice\":\"Bridge tokens\"},\"setFeeInfo(uint256,address)\":{\"notice\":\"Set fee info\"},\"setPriceProvider(address)\":{\"notice\":\"Set price provider\"},\"treasury()\":{\"notice\":\"Treasury address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oft/RadiantOFT.sol\":\"RadiantOFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.6;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n  /**\\n   * @dev Returns true if `account` is a contract.\\n   *\\n   * [IMPORTANT]\\n   * ====\\n   * It is unsafe to assume that an address for which this function returns\\n   * false is an externally-owned account (EOA) and not a contract.\\n   *\\n   * Among others, `isContract` will return false for the following\\n   * types of addresses:\\n   *\\n   *  - an externally-owned account\\n   *  - a contract in construction\\n   *  - an address where a contract will be created\\n   *  - an address where a contract lived, but was destroyed\\n   * ====\\n   */\\n  function isContract(address account) internal view returns (bool) {\\n    // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n    // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n    // for accounts without code, i.e. `keccak256('')`\\n    bytes32 codehash;\\n    bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n    // solhint-disable-next-line no-inline-assembly\\n    assembly {\\n      codehash := extcodehash(account)\\n    }\\n    return (codehash != accountHash && codehash != 0x0);\\n  }\\n\\n  /**\\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n   * `recipient`, forwarding all available gas and reverting on errors.\\n   *\\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n   * imposed by `transfer`, making them unable to receive funds via\\n   * `transfer`. {sendValue} removes this limitation.\\n   *\\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n   *\\n   * IMPORTANT: because control is transferred to `recipient`, care must be\\n   * taken to not create reentrancy vulnerabilities. Consider using\\n   * {ReentrancyGuard} or the\\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n   */\\n  function sendValue(address payable recipient, uint256 amount) internal {\\n    require(address(this).balance >= amount, 'Address: insufficient balance');\\n\\n    // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n    (bool success, ) = recipient.call{value: amount}('');\\n    require(success, 'Address: unable to send value, recipient may have reverted');\\n  }\\n}\\n\",\"keccak256\":\"0x4e990f6c2c10cda8ab25f171af1776b3bc871c2802607913893468742d29e51e\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n  function _msgSender() internal view virtual returns (address payable) {\\n    return msg.sender;\\n  }\\n\\n  function _msgData() internal view virtual returns (bytes memory) {\\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n    return msg.data;\\n  }\\n}\\n\",\"keccak256\":\"0xdf8525cd148276c372bf07a4b90630053d76c7a52649c7740df86a1a1a75cc7a\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\",\"keccak256\":\"0xd4ab12447cd7e8f4520cbae4996800ae758268f6effd3796d10824e961942e54\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport './Context.sol';\\nimport './IERC20.sol';\\nimport './SafeMath.sol';\\nimport './Address.sol';\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n  using SafeMath for uint256;\\n  using Address for address;\\n\\n  mapping(address => uint256) private _balances;\\n\\n  mapping(address => mapping(address => uint256)) private _allowances;\\n\\n  uint256 private _totalSupply;\\n\\n  string private _name;\\n  string private _symbol;\\n  uint8 internal _decimals;\\n\\n  /**\\n   * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n   * a default value of 18.\\n   *\\n   * To select a different value for {decimals}, use {_setupDecimals}.\\n   *\\n   * All three of these values are immutable: they can only be set once during\\n   * construction.\\n   */\\n  constructor(string memory name_, string memory symbol_) {\\n    _name = name_;\\n    _symbol = symbol_;\\n    _decimals = 18;\\n  }\\n\\n  /**\\n   * @dev Returns the name of the token.\\n   */\\n  function name() public view returns (string memory) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @dev Returns the symbol of the token, usually a shorter version of the\\n   * name.\\n   */\\n  function symbol() public view returns (string memory) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @dev Returns the number of decimals used to get its user representation.\\n   * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n   * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n   *\\n   * Tokens usually opt for a value of 18, imitating the relationship between\\n   * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n   * called.\\n   *\\n   * NOTE: This information is only used for _display_ purposes: it in\\n   * no way affects any of the arithmetic of the contract, including\\n   * {IERC20-balanceOf} and {IERC20-transfer}.\\n   */\\n  function decimals() public view returns (uint8) {\\n    return _decimals;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-totalSupply}.\\n   */\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-balanceOf}.\\n   */\\n  function balanceOf(address account) public view override returns (uint256) {\\n    return _balances[account];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transfer}.\\n   *\\n   * Requirements:\\n   *\\n   * - `recipient` cannot be the zero address.\\n   * - the caller must have a balance of at least `amount`.\\n   */\\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n    _transfer(_msgSender(), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-allowance}.\\n   */\\n  function allowance(address owner, address spender)\\n    public\\n    view\\n    virtual\\n    override\\n    returns (uint256)\\n  {\\n    return _allowances[owner][spender];\\n  }\\n\\n  /**\\n   * @dev See {IERC20-approve}.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n    _approve(_msgSender(), spender, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * @dev See {IERC20-transferFrom}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance. This is not\\n   * required by the EIP. See the note at the beginning of {ERC20};\\n   *\\n   * Requirements:\\n   * - `sender` and `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   * - the caller must have allowance for ``sender``'s tokens of at least\\n   * `amount`.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) public virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(\\n      sender,\\n      _msgSender(),\\n      _allowances[sender][_msgSender()].sub(amount, 'ERC20: transfer amount exceeds allowance')\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {IERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(address spender, uint256 subtractedValue)\\n    public\\n    virtual\\n    returns (bool)\\n  {\\n    _approve(\\n      _msgSender(),\\n      spender,\\n      _allowances[_msgSender()][spender].sub(\\n        subtractedValue,\\n        'ERC20: decreased allowance below zero'\\n      )\\n    );\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\\n   *\\n   * This is internal function is equivalent to {transfer}, and can be used to\\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\\n   *\\n   * Emits a {Transfer} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `sender` cannot be the zero address.\\n   * - `recipient` cannot be the zero address.\\n   * - `sender` must have a balance of at least `amount`.\\n   */\\n  function _transfer(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) internal virtual {\\n    require(sender != address(0), 'ERC20: transfer from the zero address');\\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\\n\\n    _beforeTokenTransfer(sender, recipient, amount);\\n\\n    _balances[sender] = _balances[sender].sub(amount, 'ERC20: transfer amount exceeds balance');\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n   * the total supply.\\n   *\\n   * Emits a {Transfer} event with `from` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `to` cannot be the zero address.\\n   */\\n  function _mint(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: mint to the zero address');\\n\\n    _beforeTokenTransfer(address(0), account, amount);\\n\\n    _totalSupply = _totalSupply.add(amount);\\n    _balances[account] = _balances[account].add(amount);\\n    emit Transfer(address(0), account, amount);\\n  }\\n\\n  /**\\n   * @dev Destroys `amount` tokens from `account`, reducing the\\n   * total supply.\\n   *\\n   * Emits a {Transfer} event with `to` set to the zero address.\\n   *\\n   * Requirements\\n   *\\n   * - `account` cannot be the zero address.\\n   * - `account` must have at least `amount` tokens.\\n   */\\n  function _burn(address account, uint256 amount) internal virtual {\\n    require(account != address(0), 'ERC20: burn from the zero address');\\n\\n    _beforeTokenTransfer(account, address(0), amount);\\n\\n    _balances[account] = _balances[account].sub(amount, 'ERC20: burn amount exceeds balance');\\n    _totalSupply = _totalSupply.sub(amount);\\n    emit Transfer(account, address(0), amount);\\n  }\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\\n   *\\n   * This is internal function is equivalent to `approve`, and can be used to\\n   * e.g. set automatic allowances for certain subsystems, etc.\\n   *\\n   * Emits an {Approval} event.\\n   *\\n   * Requirements:\\n   *\\n   * - `owner` cannot be the zero address.\\n   * - `spender` cannot be the zero address.\\n   */\\n  function _approve(\\n    address owner,\\n    address spender,\\n    uint256 amount\\n  ) internal virtual {\\n    require(owner != address(0), 'ERC20: approve from the zero address');\\n    require(spender != address(0), 'ERC20: approve to the zero address');\\n\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n    * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n    *\\n    * Does not update the allowance amount in case of infinite allowance.\\n    * Revert if not enough allowance is available.\\n    *\\n    * Might emit an {Approval} event.\\n    */\\n  function _spendAllowance(\\n      address owner,\\n      address spender,\\n      uint256 amount\\n  ) internal virtual {\\n      uint256 currentAllowance = allowance(owner, spender);\\n      if (currentAllowance != type(uint256).max) {\\n          require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n          _approve(owner, spender, currentAllowance - amount);\\n      }\\n  }\\n\\n  /**\\n   * @dev Sets {decimals} to a value other than the default one of 18.\\n   *\\n   * WARNING: This function should only be called from the constructor. Most\\n   * applications that interact with token contracts will not expect\\n   * {decimals} to ever change, and may work incorrectly if it does.\\n   */\\n  function _setupDecimals(uint8 decimals_) internal {\\n    _decimals = decimals_;\\n  }\\n\\n  /**\\n   * @dev Hook that is called before any transfer of tokens. This includes\\n   * minting and burning.\\n   *\\n   * Calling conditions:\\n   *\\n   * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n   * will be to transferred to `to`.\\n   * - when `from` is zero, `amount` tokens will be minted for `to`.\\n   * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n   * - `from` and `to` are never both zero.\\n   *\\n   * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n   */\\n  function _beforeTokenTransfer(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xae99531d3aaa523b16e22c440fb342d1d70c847dd169ca5833353fe2934dca06\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity 0.7.6;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0x851845c9e2fa2200501646389b64cfa253ed7dc3947294795b4bfe4524710173\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.6;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf94bd623f906d98f6eadd8e1f33a9be4a8172fdcc12d4870dc70924ca6aa66fb\",\"license\":\"agpl-3.0\"},\"contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport './Context.sol';\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n  address private _owner;\\n\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @dev Initializes the contract setting the deployer as the initial owner.\\n   */\\n  constructor() {\\n    address msgSender = _msgSender();\\n    _owner = msgSender;\\n    emit OwnershipTransferred(address(0), msgSender);\\n  }\\n\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() public view returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\n    _;\\n  }\\n\\n  /**\\n   * @dev Leaves the contract without owner. It will not be possible to call\\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\\n   *\\n   * NOTE: Renouncing ownership will leave the contract without an owner,\\n   * thereby removing any functionality that is only available to the owner.\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) public virtual onlyOwner {\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x0b0ab32430f6def166e85816b37c61c175168c96519305001b5a209cfb5856dd\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\",\"keccak256\":\"0x84c06921ceec3b9687a20464684389f37e5b7e87ab7fa87de7580e44130a4f04\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.7.6;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n  /**\\n   * @dev Returns the addition of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `+` operator.\\n   *\\n   * Requirements:\\n   * - Addition cannot overflow.\\n   */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a, 'SafeMath: addition overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return sub(a, b, 'SafeMath: subtraction overflow');\\n  }\\n\\n  /**\\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n   * overflow (when the result is negative).\\n   *\\n   * Counterpart to Solidity's `-` operator.\\n   *\\n   * Requirements:\\n   * - Subtraction cannot overflow.\\n   */\\n  function sub(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b <= a, errorMessage);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the multiplication of two unsigned integers, reverting on\\n   * overflow.\\n   *\\n   * Counterpart to Solidity's `*` operator.\\n   *\\n   * Requirements:\\n   * - Multiplication cannot overflow.\\n   */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return div(a, b, 'SafeMath: division by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n   * division by zero. The result is rounded towards zero.\\n   *\\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n   * uses an invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function div(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    // Solidity only automatically asserts when dividing by 0\\n    require(b > 0, errorMessage);\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return mod(a, b, 'SafeMath: modulo by zero');\\n  }\\n\\n  /**\\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n   * Reverts with custom message when dividing by zero.\\n   *\\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\\n   * invalid opcode to revert (consuming all remaining gas).\\n   *\\n   * Requirements:\\n   * - The divisor cannot be zero.\\n   */\\n  function mod(\\n    uint256 a,\\n    uint256 b,\\n    string memory errorMessage\\n  ) internal pure returns (uint256) {\\n    require(b != 0, errorMessage);\\n    return a % b;\\n  }\\n\\n  function min(uint x, uint y) internal pure returns (uint z) {\\n        z = x < y ? x : y;\\n    }\\n}\\n\",\"keccak256\":\"0x4679f49c198f8ee52a6b2107ccd543c89eaf718c4c9db6ac7aa01b4c2c832a8b\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\ninterface IPriceProvider {\\n    function getTokenPrice() external view returns (uint256);\\n    function getTokenPriceUsd() external view returns (uint256);\\n    function getLpTokenPrice() external view returns (uint256);\\n    function getLpTokenPriceUsd() external view returns (uint256);\\n    function decimals() external view returns (uint256);\\n    function update() external;\\n    function baseTokenPriceInUsdProxyAggregator() external view returns (address);\\n}\",\"keccak256\":\"0xc6769af9019da36c386c44cf3fd9f07841f1e953debf843356415d825258033a\",\"license\":\"MIT\"},\"contracts/oft/RadiantOFT.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.7.6;\\n\\nimport \\\"./layerzero/OFT.sol\\\";\\nimport \\\"../dependencies/openzeppelin/contracts/Pausable.sol\\\";\\nimport \\\"../interfaces/IPriceProvider.sol\\\";\\n\\n/// @title Radiant Token\\n/// @author Radiant Labs\\n/// @dev All function calls are currently implemented without side effects\\ncontract RadiantOFT is OFT, Pausable {\\n\\tusing SafeMath for uint256;\\n\\n\\t/// @notice Divisor for fee ratio, 100%\\n\\tuint256 public constant FEE_DIVISOR = 10000;\\n\\n\\t/// @notice Max supply of token\\n\\tuint256 public immutable maxSupply;\\n\\n\\t/// @notice Max mint amount of token\\n\\tuint256 public immutable maxMintAmount;\\n\\n\\t// Token is minted max supply only once to DAO\\n\\tbool private minted = false;\\n\\n\\t/// @notice Fee ratio for bridging\\n\\tuint256 public fee_ratio;\\n\\n\\t/// @notice Treasury address\\n\\taddress public treasury;\\n\\n\\t/// @notice DAO address\\n\\taddress public dao;\\n\\n\\t/// @notice PriceProvider address\\n\\tIPriceProvider public priceProvider;\\n\\n\\t/// @notice Emitted when fee ratio is updated\\n\\tevent FeeInfoUpdated(uint256 _fee, address indexed _treasury);\\n\\n\\t/// @notice Emitted when PriceProvider is updated\\n\\tevent PriceProviderUpdated(IPriceProvider indexed _priceProvider);\\n\\n\\t/**\\n\\t * @notice Constructor\\n\\t * @param _tokenName     token name\\n\\t * @param _symbol        token symbol\\n\\t * @param _endpoint      LZ endpoint\\n\\t * @param _maxSupply     max token supply\\n\\t * @param _maxMintAmount max token mint amount\\n\\t * @param _fee           fee ratio\\n\\t * @param _treasury      treasury address\\n\\t * @param _dao           dao address\\n\\t */\\n\\tconstructor(\\n\\t\\tstring memory _tokenName,\\n\\t\\tstring memory _symbol,\\n\\t\\taddress _endpoint,\\n\\t\\tuint256 _maxSupply,\\n\\t\\tuint256 _maxMintAmount,\\n\\t\\tuint256 _fee,\\n\\t\\taddress _treasury,\\n\\t\\taddress _dao\\n\\t) OFT(_symbol, _tokenName, _endpoint) {\\n\\t\\trequire(_endpoint != address(0), \\\"Not a valid address\\\");\\n\\t\\trequire(_maxSupply != uint256(0), \\\"Not a valid number\\\");\\n\\t\\trequire(_maxMintAmount != uint256(0), \\\"Not a valid number\\\");\\n\\t\\trequire(_maxMintAmount <= _maxSupply, \\\"invalid mint/supply\\\");\\n\\t\\trequire(_fee <= uint256(1e4), \\\"Not a valid number\\\");\\n\\t\\trequire(_treasury != address(0), \\\"Not a valid address\\\");\\n\\t\\trequire(_dao != address(0), \\\"Not a valid address\\\");\\n\\n\\t\\tmaxSupply = _maxSupply;\\n\\t\\tmaxMintAmount = _maxMintAmount;\\n\\t\\ttreasury = _treasury;\\n\\t\\tdao = _dao;\\n\\t\\tfee_ratio = _fee;\\n\\n\\t\\temit Transfer(address(0), msg.sender, 0);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Set fee info\\n\\t * @param _fee ratio\\n\\t * @param _treasury address\\n\\t */\\n\\tfunction setFeeInfo(uint256 _fee, address _treasury) external onlyOwner {\\n\\t\\trequire(_fee <= 1e4, \\\"Invalid ratio\\\");\\n\\t\\tfee_ratio = _fee;\\n\\t\\ttreasury = _treasury;\\n\\t\\temit FeeInfoUpdated(_fee, _treasury);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Set price provider\\n\\t * @param _priceProvider address\\n\\t */\\n\\tfunction setPriceProvider(IPriceProvider _priceProvider) external onlyOwner {\\n\\t\\tpriceProvider = _priceProvider;\\n\\t\\temit PriceProviderUpdated(_priceProvider);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Pause/Unpause operations\\n\\t * @param pause option\\n\\t */\\n\\tfunction pauseBridge(bool pause) external onlyOwner {\\n\\t\\tpause ? _pause() : _unpause();\\n\\t}\\n\\n\\t/**\\n\\t * @notice Bridge fee amount\\n\\t * @param rdntAmount amount for bridge\\n\\t */\\n\\tfunction getBridgeFee(uint256 rdntAmount) public view returns (uint256) {\\n\\t\\tif (address(priceProvider) == address(0)) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tuint256 priceInEth = priceProvider.getTokenPrice();\\n\\t\\tuint256 priceDecimals = priceProvider.decimals();\\n\\t\\tuint256 rdntInEth = rdntAmount.mul(priceInEth).div(10**priceDecimals).mul(10**18).div(10**_decimals);\\n\\t\\treturn rdntInEth.mul(fee_ratio).div(FEE_DIVISOR);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Returns LZ fee + Bridge fee\\n\\t */\\n\\tfunction estimateSendFee(\\n\\t\\tuint16 _dstChainId,\\n\\t\\tbytes memory _toAddress,\\n\\t\\tuint _amount,\\n\\t\\tbool _useZro,\\n\\t\\tbytes memory _adapterParams\\n\\t) public view virtual override returns (uint nativeFee, uint zroFee) {\\n\\t\\t(nativeFee, zroFee) = super.estimateSendFee(_dstChainId, _toAddress, _amount, _useZro, _adapterParams);\\n\\t\\tnativeFee = nativeFee.add(getBridgeFee(_amount));\\n\\t}\\n\\n\\t/**\\n\\t * @notice Mint tokens to dao\\n\\t * @dev Can be called only once\\n\\t */\\n\\tfunction mint() external {\\n\\t\\trequire(!minted, \\\"mint disabled\\\");\\n\\t\\t_mint(dao, maxMintAmount);\\n\\t\\tminted = true;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Burn tokens of `msg.sender`\\n\\t * @param _value is amount to burn\\n\\t */\\n\\tfunction burn(uint256 _value) external returns (bool) {\\n\\t\\t_burn(msg.sender, _value);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Bridge tokens\\n\\t * @dev This adds extra bridge fees\\n\\t */\\n\\tfunction sendFrom(\\n\\t\\taddress _from,\\n\\t\\tuint16 _dstChainId,\\n\\t\\tbytes memory _toAddress,\\n\\t\\tuint _amount,\\n\\t\\taddress payable _refundAddress,\\n\\t\\taddress _zroPaymentAddress,\\n\\t\\tbytes memory _adapterParams\\n\\t) public payable virtual override whenNotPaused {\\n\\t\\tuint256 fee = getBridgeFee(_amount);\\n\\t\\trequire(msg.value >= fee, \\\"ETH sent is not enough for the fee payment\\\");\\n\\t\\tpayable(treasury).transfer(fee);\\n\\t\\t_send(\\n\\t\\t\\t_from,\\n\\t\\t\\t_dstChainId,\\n\\t\\t\\t_toAddress,\\n\\t\\t\\t_amount,\\n\\t\\t\\t_refundAddress,\\n\\t\\t\\t_zroPaymentAddress,\\n\\t\\t\\t_adapterParams,\\n\\t\\t\\tmsg.value.sub(fee)\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Bridge token\\n\\t * @param amt Amount of RDNT\\n\\t * @param destChainId Destination chain ID\\n\\t */\\n\\tfunction bridge(uint256 amt, uint16 destChainId) external payable whenNotPaused {\\n\\t\\tuint256 fee = getBridgeFee(amt);\\n\\t\\trequire(msg.value >= fee, \\\"ETH sent is not enough for the fee payment\\\");\\n\\t\\tpayable(treasury).transfer(fee);\\n\\t\\t_send(\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\tdestChainId,\\n\\t\\t\\tabi.encodePacked(_msgSender()),\\n\\t\\t\\tamt,\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\taddress(0),\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\tmsg.value.sub(fee)\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Extra function for allowance management\\n\\t * @dev Can be removed if no extra operation\\n\\t */\\n\\tfunction _debitFrom(\\n\\t\\taddress _from,\\n\\t\\tuint16 _dstChainId,\\n\\t\\tbytes memory _toAddress,\\n\\t\\tuint _amount\\n\\t) internal virtual override whenNotPaused {\\n\\t\\tsuper._debitFrom(_from, _dstChainId, _toAddress, _amount);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Mint tokens\\n\\t * @param account address\\n\\t * @param amount to mint\\n\\t */\\n\\tfunction _mint(address account, uint256 amount) internal override {\\n\\t\\trequire(amount <= maxMintAmount, \\\"exceeds max amount\\\");\\n\\t\\tsuper._mint(account, amount);\\n\\t\\trequire(maxSupply >= totalSupply(), \\\"exceeds max supply\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0x4ff607479e18c3185bd5fb2e22cfe1411a07b2760a6c869164990f004762ebf7\",\"license\":\"BUSL-1.1\"},\"contracts/oft/layerzero/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../../dependencies/openzeppelin/contracts/SafeMath.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/contracts/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using SafeMath for uint256;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint => uint)) public minDstGasLookup;\\n\\n    event SetTrustedRemote(uint16 _srcChainId, bytes _srcAddress);\\n    event SetMinDstGasLookup(uint16 _dstChainId, uint _type, uint _dstGasAmount);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(_srcAddress.length == trustedRemote.length && keccak256(_srcAddress) == keccak256(trustedRemote), \\\"LzApp: invalid source sending contract\\\");\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint256 _fee) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        lzEndpoint.send{value: _fee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(uint16 _dstChainId, uint _type, bytes memory _adapterParams, uint _extraGas) internal view {\\n        uint providedGasLimit = getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type].add(_extraGas);\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // allow owner to set it multiple times.\\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external onlyOwner {\\n        trustedRemoteLookup[_srcChainId] = _srcAddress;\\n        emit SetTrustedRemote(_srcChainId, _srcAddress);\\n    }\\n\\n    function setMinDstGasLookup(uint16 _dstChainId, uint _type, uint _dstGasAmount) external onlyOwner {\\n        require(_dstGasAmount > 0, \\\"LzApp: invalid _dstGasAmount\\\");\\n        minDstGasLookup[_dstChainId][_type] = _dstGasAmount;\\n        emit SetMinDstGasLookup(_dstChainId, _type, _dstGasAmount);\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\",\"keccak256\":\"0x0d561b66d6e2d2185dc69fb4a7cba196d03aed813a1427245c7dff0dd09383d0\",\"license\":\"MIT\"},\"contracts/oft/layerzero/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./LzApp.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\\n        // try-catch all errors/exceptions\\n        try this.nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload) {\\n            // do nothing\\n        } catch {\\n            // error / exception\\n            require(failedMessages[_srcChainId][_srcAddress][_nonce] == bytes32(0));\\n            failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n            emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload);\\n        }\\n    }\\n\\n    function nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function retryMessage(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n}\",\"keccak256\":\"0x673a2f5ce682b13b3ad35a607715d6a664eb892efdafb9f4b47c6ec7c8f5dfd4\",\"license\":\"MIT\"},\"contracts/oft/layerzero/OFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../../dependencies/openzeppelin/contracts/ERC20.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/contracts/IERC165.sol\\\";\\nimport \\\"./interfaces/IOFT.sol\\\";\\nimport \\\"./OFTCore.sol\\\";\\n\\n// override decimal() function is needed\\ncontract OFT is OFTCore, ERC20, IOFT {\\n    constructor(string memory _name, string memory _symbol, address _lzEndpoint) ERC20(_name, _symbol) OFTCore(_lzEndpoint) {}\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(OFTCore, IERC165) returns (bool) {\\n        return interfaceId == type(IOFT).interfaceId || interfaceId == type(IERC20).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    function circulatingSupply() public view virtual override returns (uint) {\\n        return totalSupply();\\n    }\\n\\n    function _debitFrom(address _from, uint16, bytes memory, uint _amount) internal virtual override {\\n        address spender = _msgSender();\\n        if (_from != spender) _spendAllowance(_from, spender, _amount);\\n        _burn(_from, _amount);\\n    }\\n\\n    function _creditTo(uint16, address _toAddress, uint _amount) internal virtual override {\\n        _mint(_toAddress, _amount);\\n    }\\n}\",\"keccak256\":\"0xcc79a03a1347376b5d6fc67e54fa8f1e71fe493482611ef7ba558e26ffdd281e\",\"license\":\"MIT\"},\"contracts/oft/layerzero/OFTCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./NonblockingLzApp.sol\\\";\\nimport \\\"./interfaces/IOFTCore.sol\\\";\\nimport \\\"../../dependencies/openzeppelin/contracts/ERC165.sol\\\";\\n\\nabstract contract OFTCore is NonblockingLzApp, ERC165, IOFTCore {\\n    uint public constant NO_EXTRA_GAS = 0;\\n    uint public constant FUNCTION_TYPE_SEND = 1;\\n    bool public useCustomAdapterParams;\\n\\n    event SetUseCustomAdapterParams(bool _useCustomAdapterParams);\\n\\n    constructor(address _lzEndpoint) NonblockingLzApp(_lzEndpoint) {}\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IOFTCore).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    function estimateSendFee(uint16 _dstChainId, bytes memory _toAddress, uint _amount, bool _useZro, bytes memory _adapterParams) public view virtual override returns (uint nativeFee, uint zroFee) {\\n        // mock the payload for send()\\n        bytes memory payload = abi.encode(_toAddress, _amount);\\n        return lzEndpoint.estimateFees(_dstChainId, address(this), payload, _useZro, _adapterParams);\\n    }\\n\\n    function sendFrom(address _from, uint16 _dstChainId, bytes memory _toAddress, uint _amount, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams) public payable virtual override {\\n        _send(_from, _dstChainId, _toAddress, _amount, _refundAddress, _zroPaymentAddress, _adapterParams, msg.value);\\n    }\\n\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64, /*_nonce*/\\n        bytes memory _payload\\n    ) internal virtual override {\\n        // decode and load the toAddress\\n        (bytes memory toAddressBytes, uint amount) = abi.decode(_payload, (bytes, uint));\\n        address toAddress;\\n        assembly {\\n            toAddress := mload(add(toAddressBytes, 20))\\n        }\\n\\n        _creditTo(_srcChainId, toAddress, amount);\\n\\n        emit ReceiveFromChain(_srcChainId, _srcAddress, toAddress, amount);\\n    }\\n\\n    function _send(address _from, uint16 _dstChainId, bytes memory _toAddress, uint _amount, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint256 _fee) internal virtual {\\n        _debitFrom(_from, _dstChainId, _toAddress, _amount);\\n\\n        bytes memory payload = abi.encode(_toAddress, _amount);\\n        if (useCustomAdapterParams) {\\n            _checkGasLimit(_dstChainId, FUNCTION_TYPE_SEND, _adapterParams, NO_EXTRA_GAS);\\n        } else {\\n            require(_adapterParams.length == 0, \\\"LzApp: _adapterParams must be empty.\\\");\\n        }\\n        _lzSend(_dstChainId, payload, _refundAddress, _zroPaymentAddress, _adapterParams, _fee);\\n\\n        emit SendToChain(_dstChainId, _from, _toAddress, _amount);\\n    }\\n\\n    function setUseCustomAdapterParams(bool _useCustomAdapterParams) external onlyOwner {\\n        useCustomAdapterParams = _useCustomAdapterParams;\\n        emit SetUseCustomAdapterParams(_useCustomAdapterParams);\\n    }\\n\\n    function _debitFrom(address _from, uint16 _dstChainId, bytes memory _toAddress, uint _amount) internal virtual;\\n\\n    function _creditTo(uint16 _srcChainId, address _toAddress, uint _amount) internal virtual;\\n}\",\"keccak256\":\"0xed63e5a4bf9a575b0b151f048117d8ec25db28e98780f785bf79aabddf0bc63b\",\"license\":\"MIT\"},\"contracts/oft/layerzero/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\",\"keccak256\":\"0x7fa527e64f50ef3cee594d55401b36d9ba80fb8e898ea8a446a28fbeb82eabf5\",\"license\":\"MIT\"},\"contracts/oft/layerzero/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\",\"keccak256\":\"0x341c502147595b21648b31057afba28cf844f2e4e7dc6af35cd01040297dcc92\",\"license\":\"MIT\"},\"contracts/oft/layerzero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\",\"keccak256\":\"0x2608306b39bf0d3035b924dd48ecbb673c9b44059dacb132f9c65059b942fb9e\",\"license\":\"MIT\"},\"contracts/oft/layerzero/interfaces/IOFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"./IOFTCore.sol\\\";\\nimport \\\"../../../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the OFT standard\\n */\\ninterface IOFT is IOFTCore, IERC20 {\\n\\n}\",\"keccak256\":\"0xb8f10c9650941fdc0c4fe0fbfb7fc83c5618c7c096a059a9580e3b642a59bbd6\",\"license\":\"MIT\"},\"contracts/oft/layerzero/interfaces/IOFTCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"../../../dependencies/openzeppelin/contracts/IERC20.sol\\\";\\nimport \\\"../../../dependencies/openzeppelin/contracts/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface IOFTCore is IERC165 {\\n    /**\\n     * @dev estimate send token `_tokenId` to (`_dstChainId`, `_toAddress`)\\n     * _dstChainId - L0 defined chain id to send tokens too\\n     * _toAddress - dynamic bytes array which contains the address to whom you are sending tokens to on the dstChain\\n     * _amount - amount of the tokens to transfer\\n     * _useZro - indicates to use zro to pay L0 fees\\n     * _adapterParam - flexible bytes array to indicate messaging adapter services in L0\\n     */\\n    function estimateSendFee(uint16 _dstChainId, bytes calldata _toAddress, uint _amount, bool _useZro, bytes calldata _adapterParams) external view returns (uint nativeFee, uint zroFee);\\n\\n    /**\\n     * @dev send `_amount` amount of token to (`_dstChainId`, `_toAddress`) from `_from`\\n     * `_from` the owner of token\\n     * `_dstChainId` the destination chain identifier\\n     * `_toAddress` can be any size depending on the `dstChainId`.\\n     * `_amount` the quantity of tokens in wei\\n     * `_refundAddress` the address LayerZero refunds if too much message fee is sent\\n     * `_zroPaymentAddress` set to address(0x0) if not paying in ZRO (LayerZero Token)\\n     * `_adapterParams` is a flexible bytes array to indicate messaging adapter services\\n     */\\n    function sendFrom(address _from, uint16 _dstChainId, bytes calldata _toAddress, uint _amount, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    /**\\n     * @dev returns the circulating amount of tokens on current chain\\n     */\\n    function circulatingSupply() external view returns (uint);\\n\\n    /**\\n     * @dev Emitted when `_amount` tokens are moved from the `_sender` to (`_dstChainId`, `_toAddress`)\\n     * `_nonce` is the outbound nonce\\n     */\\n    event SendToChain(uint16 indexed _dstChainId, address indexed _from, bytes indexed _toAddress, uint _amount);\\n\\n    /**\\n     * @dev Emitted when `_amount` tokens are received from `_srcChainId` into the `_toAddress` on the local chain.\\n     * `_nonce` is the inbound nonce.\\n     */\\n    event ReceiveFromChain(uint16 indexed _srcChainId, bytes indexed _srcAddress, address indexed _toAddress, uint _amount);\\n}\",\"keccak256\":\"0x31244fcd99c8c4ab2b3f5aeeb198d4bbc317d75fb3303a5a52f8f6d4bc05f58e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e0604052600a805462ff0000191690553480156200001d57600080fd5b5060405162004c0938038062004c0983398181016040526101008110156200004457600080fd5b81019080805160405193929190846401000000008211156200006557600080fd5b9083019060208201858111156200007b57600080fd5b82516401000000008111828201881017156200009657600080fd5b82525081516020918201929091019080838360005b83811015620000c5578181015183820152602001620000ab565b50505050905090810190601f168015620000f35780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011757600080fd5b9083019060208201858111156200012d57600080fd5b82516401000000008111828201881017156200014857600080fd5b82525081516020918201929091019080838360005b83811015620001775781810151838201526020016200015d565b50505050905090810190601f168015620001a55780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608084015160a085015160c09095015193965091945092909186888782828280806000620001e662000536565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060601b6001600160601b03191660805250508151620002579060089060208501906200053a565b5080516200026d9060099060208401906200053a565b5050600a805461ff001960ff19909116601217169055505050506001600160a01b038616620002d9576040805162461bcd60e51b81526020600482015260136024820152724e6f7420612076616c6964206164647265737360681b604482015290519081900360640190fd5b8462000321576040805162461bcd60e51b81526020600482015260126024820152712737ba1030903b30b634b210373ab6b132b960711b604482015290519081900360640190fd5b8362000369576040805162461bcd60e51b81526020600482015260126024820152712737ba1030903b30b634b210373ab6b132b960711b604482015290519081900360640190fd5b84841115620003bf576040805162461bcd60e51b815260206004820152601360248201527f696e76616c6964206d696e742f737570706c7900000000000000000000000000604482015290519081900360640190fd5b6127108311156200040c576040805162461bcd60e51b81526020600482015260126024820152712737ba1030903b30b634b210373ab6b132b960711b604482015290519081900360640190fd5b6001600160a01b0382166200045e576040805162461bcd60e51b81526020600482015260136024820152724e6f7420612076616c6964206164647265737360681b604482015290519081900360640190fd5b6001600160a01b038116620004b0576040805162461bcd60e51b81526020600482015260136024820152724e6f7420612076616c6964206164647265737360681b604482015290519081900360640190fd5b60a085905260c0849052600c80546001600160a01b038085166001600160a01b031992831617909255600d805492841692909116919091179055600b83905560408051600080825291513392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a35050505050505050620005e6565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620005725760008555620005bd565b82601f106200058d57805160ff1916838001178555620005bd565b82800160010185558215620005bd579182015b82811115620005bd578251825591602001919060010190620005a0565b50620005cb929150620005cf565b5090565b5b80821115620005cb5760008155600101620005d0565b60805160601c60a05160c0516145bc6200064d600039806117845280611838528061303a5250806125d652806130b65250806112e952806115c852806116bc5280611b8c52806121d952806122645280612a3d528061342f5280613e8652506145bc6000f3fe60806040526004361061024e5760003560e01c80621d35671461025357806301ffc9a7146103a757806306fdde03146103ef578063078108671461047957806307e0db17146104bf578063095ea7b3146104ed57806310ddb137146105265780631249c58b1461055457806318160ddd146105695780631a3947951461057e578063239c70ae146105aa57806323b872dd146105bf5780632a205e3d14610602578063313ce5671461076a578063372aa2241461079557806339509351146107c85780633d8b38f6146108015780634162169f1461088757806342966c68146108b857806342d65a8d146108e25780634477051514610968578063519056361461097d5780635b8c41e614610ade5780635c975abb14610ba557806361d027b314610bba57806366ad5c8a14610bcf57806370a0823114610d21578063715018a614610d545780637533d78814610d6957806381b6949414610d975780638da5cb5b14610dac5780639358928b14610dc157806395d89b4114610dd6578063963c78dd14610deb5780639b57db5f14610e245780639e93ad8e14610e5e578063a457c2d714610e73578063a9059cbb14610eac578063af3fb21c14610ee5578063b353aaa714610efa578063b888879e14610f0f578063cbed8b9c14610f24578063d052e6be14610fba578063d1deba1f14610fe1578063d5abeb0114611126578063dd62ed3e1461113b578063eab45d9c14611176578063eb8d72b7146111a2578063ed629c5c14611228578063f066bca91461123d578063f2fde38b14611267578063f5ecbdbc1461129a575b600080fd5b34801561025f57600080fd5b506103a56004803603608081101561027657600080fd5b61ffff8235169190810190604081016020820135600160201b81111561029b57600080fd5b8201836020820111156102ad57600080fd5b803590602001918460018302840111600160201b831117156102ce57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b81111561033157600080fd5b82018360208201111561034357600080fd5b803590602001918460018302840111600160201b8311171561036457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112e7945050505050565b005b3480156103b357600080fd5b506103db600480360360208110156103ca57600080fd5b50356001600160e01b03191661147b565b604080519115158252519081900360200190f35b3480156103fb57600080fd5b506104046114bb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104ad6004803603604081101561049c57600080fd5b5061ffff8135169060200135611551565b60408051918252519081900360200190f35b3480156104cb57600080fd5b506103a5600480360360208110156104e257600080fd5b503561ffff1661156e565b3480156104f957600080fd5b506103db6004803603604081101561051057600080fd5b506001600160a01b038135169060200135611644565b34801561053257600080fd5b506103a56004803603602081101561054957600080fd5b503561ffff16611662565b34801561056057600080fd5b506103a5611724565b34801561057557600080fd5b506104ad6117bb565b34801561058a57600080fd5b506103a5600480360360208110156105a157600080fd5b503515156117c1565b3480156105b657600080fd5b506104ad611836565b3480156105cb57600080fd5b506103db600480360360608110156105e257600080fd5b506001600160a01b0381358116916020810135909116906040013561185a565b34801561060e57600080fd5b50610751600480360360a081101561062557600080fd5b61ffff8235169190810190604081016020820135600160201b81111561064a57600080fd5b82018360208201111561065c57600080fd5b803590602001918460018302840111600160201b8311171561067d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956020860135151595919450925060608101915060400135600160201b8111156106dd57600080fd5b8201836020820111156106ef57600080fd5b803590602001918460018302840111600160201b8311171561071057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118e1945050505050565b6040805192835260208301919091528051918290030190f35b34801561077657600080fd5b5061077f611915565b6040805160ff9092168252519081900360200190f35b3480156107a157600080fd5b506103a5600480360360208110156107b857600080fd5b50356001600160a01b031661191e565b3480156107d457600080fd5b506103db600480360360408110156107eb57600080fd5b506001600160a01b0381351690602001356119c0565b34801561080d57600080fd5b506103db6004803603604081101561082457600080fd5b61ffff8235169190810190604081016020820135600160201b81111561084957600080fd5b82018360208201111561085b57600080fd5b803590602001918460018302840111600160201b8311171561087c57600080fd5b509092509050611a0e565b34801561089357600080fd5b5061089c611adf565b604080516001600160a01b039092168252519081900360200190f35b3480156108c457600080fd5b506103db600480360360208110156108db57600080fd5b5035611aee565b3480156108ee57600080fd5b506103a56004803603604081101561090557600080fd5b61ffff8235169190810190604081016020820135600160201b81111561092a57600080fd5b82018360208201111561093c57600080fd5b803590602001918460018302840111600160201b8311171561095d57600080fd5b509092509050611b02565b34801561097457600080fd5b506104ad611c16565b6103a5600480360360e081101561099357600080fd5b6001600160a01b038235169161ffff60208201351691810190606081016040820135600160201b8111156109c657600080fd5b8201836020820111156109d857600080fd5b803590602001918460018302840111600160201b831117156109f957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b036020870135811696604081013590911695509193509150608081019060600135600160201b811115610a6a57600080fd5b820183602082011115610a7c57600080fd5b803590602001918460018302840111600160201b83111715610a9d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611c1b945050505050565b348015610aea57600080fd5b506104ad60048036036060811015610b0157600080fd5b61ffff8235169190810190604081016020820135600160201b811115610b2657600080fd5b820183602082011115610b3857600080fd5b803590602001918460018302840111600160201b83111715610b5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160401b03169150611ccd9050565b348015610bb157600080fd5b506103db611d01565b348015610bc657600080fd5b5061089c611d0f565b348015610bdb57600080fd5b506103a560048036036080811015610bf257600080fd5b61ffff8235169190810190604081016020820135600160201b811115610c1757600080fd5b820183602082011115610c2957600080fd5b803590602001918460018302840111600160201b83111715610c4a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b811115610cad57600080fd5b820183602082011115610cbf57600080fd5b803590602001918460018302840111600160201b83111715610ce057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611d1e945050505050565b348015610d2d57600080fd5b506104ad60048036036020811015610d4457600080fd5b50356001600160a01b0316611d7e565b348015610d6057600080fd5b506103a5611d99565b348015610d7557600080fd5b5061040460048036036020811015610d8c57600080fd5b503561ffff16611e29565b348015610da357600080fd5b506104ad611ec3565b348015610db857600080fd5b5061089c611ec9565b348015610dcd57600080fd5b506104ad611ed8565b348015610de257600080fd5b50610404611ee7565b348015610df757600080fd5b506103a560048036036040811015610e0e57600080fd5b50803590602001356001600160a01b0316611f48565b348015610e3057600080fd5b506103a560048036036060811015610e4757600080fd5b5061ffff8135169060208101359060400135612042565b348015610e6a57600080fd5b506104ad612150565b348015610e7f57600080fd5b506103db60048036036040811015610e9657600080fd5b506001600160a01b038135169060200135612156565b348015610eb857600080fd5b506103db60048036036040811015610ecf57600080fd5b506001600160a01b0381351690602001356121be565b348015610ef157600080fd5b506104ad6121d2565b348015610f0657600080fd5b5061089c6121d7565b348015610f1b57600080fd5b5061089c6121fb565b348015610f3057600080fd5b506103a560048036036080811015610f4757600080fd5b61ffff823581169260208101359091169160408201359190810190608081016060820135600160201b811115610f7c57600080fd5b820183602082011115610f8e57600080fd5b803590602001918460018302840111600160201b83111715610faf57600080fd5b50909250905061220a565b6103a560048036036040811015610fd057600080fd5b508035906020013561ffff16612333565b6103a560048036036080811015610ff757600080fd5b61ffff8235169190810190604081016020820135600160201b81111561101c57600080fd5b82018360208201111561102e57600080fd5b803590602001918460018302840111600160201b8311171561104f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b8111156110b257600080fd5b8201836020820111156110c457600080fd5b803590602001918460018302840111600160201b831117156110e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061242a945050505050565b34801561113257600080fd5b506104ad6125d4565b34801561114757600080fd5b506104ad6004803603604081101561115e57600080fd5b506001600160a01b03813581169160200135166125f8565b34801561118257600080fd5b506103a56004803603602081101561119957600080fd5b50351515612623565b3480156111ae57600080fd5b506103a5600480360360408110156111c557600080fd5b61ffff8235169190810190604081016020820135600160201b8111156111ea57600080fd5b8201836020820111156111fc57600080fd5b803590602001918460018302840111600160201b8311171561121d57600080fd5b5090925090506126c2565b34801561123457600080fd5b506103db6127aa565b34801561124957600080fd5b506104ad6004803603602081101561126057600080fd5b50356127b3565b34801561127357600080fd5b506103a56004803603602081101561128a57600080fd5b50356001600160a01b031661291b565b3480156112a657600080fd5b50610404600480360360808110156112bd57600080fd5b5061ffff81358116916020810135909116906001600160a01b036040820135169060600135612a01565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611319612b79565b6001600160a01b031614611374576040805162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c65720000604482015290519081900360640190fd5b61ffff8416600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f8101849004840285018401909252818452918301828280156114085780601f106113dd57610100808354040283529160200191611408565b820191906000526020600020905b8154815290600101906020018083116113eb57829003601f168201915b505050505090508051845114801561142d575080805190602001208480519060200120145b6114685760405162461bcd60e51b815260040180806020018281038252602681526020018061453c6026913960400191505060405180910390fd5b61147485858585612b7d565b5050505050565b60006001600160e01b0319821615806114a457506001600160e01b031982166336372b0760e01b145b806114b357506114b382612f27565b90505b919050565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156115475780601f1061151c57610100808354040283529160200191611547565b820191906000526020600020905b81548152906001019060200180831161152a57829003601f168201915b5050505050905090565b600260209081526000928352604080842090915290825290205481565b611576612b79565b6000546001600160a01b039081169116146115c6576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166307e0db17826040518263ffffffff1660e01b8152600401808261ffff168152602001915050600060405180830381600087803b15801561163057600080fd5b505af1158015611474573d6000803e3d6000fd5b6000611658611651612b79565b8484612f4c565b5060015b92915050565b61166a612b79565b6000546001600160a01b039081169116146116ba576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310ddb137826040518263ffffffff1660e01b8152600401808261ffff168152602001915050600060405180830381600087803b15801561163057600080fd5b600a5462010000900460ff1615611772576040805162461bcd60e51b815260206004820152600d60248201526c1b5a5b9d08191a5cd8589b1959609a1b604482015290519081900360640190fd5b600d546117a8906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000613038565b600a805462ff0000191662010000179055565b60075490565b6117c9612b79565b6000546001600160a01b03908116911614611819576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b8061182b57611826613121565b611833565b61183361317a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006118678484846131ba565b6118d784611873612b79565b6118d2856040518060600160405280602881526020016143db602891396001600160a01b038a166000908152600660205260408120906118b1612b79565b6001600160a01b031681526020810191909152604001600020549190613305565b612f4c565b5060019392505050565b6000806118f1878787878761339c565b9092509050611909611902866127b3565b83906135c2565b91509550959350505050565b600a5460ff1690565b611926612b79565b6000546001600160a01b03908116911614611976576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fb266add5f3044b17d27db796af992cecbe413921b4e8aaaee03c719e16b9806a90600090a250565b60006116586119cd612b79565b846118d285600660006119de612b79565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906135c2565b61ffff8316600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f8101849004840285018401909252818452849392909190830182828015611aa75780601f10611a7c57610100808354040283529160200191611aa7565b820191906000526020600020905b815481529060010190602001808311611a8a57829003601f168201915b505050505090508383604051808383808284376040519201829003909120855160209096019590952090941498975050505050505050565b600d546001600160a01b031681565b6000611afa3383613621565b506001919050565b611b0a612b79565b6000546001600160a01b03908116911614611b5a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b604080516342d65a8d60e01b815261ffff85166004820190815260248201928352604482018490526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926342d65a8d92879287928792606401848480828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b158015611bf957600080fd5b505af1158015611c0d573d6000803e3d6000fd5b50505050505050565b600081565b611c2361370b565b6000611c2e856127b3565b905080341015611c6f5760405162461bcd60e51b815260040180806020018281038252602a815260200180614443602a913960400191505060405180910390fd5b600c546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611ca9573d6000803e3d6000fd5b50611cc388888888888888611cbe348a61375a565b61379c565b5050505050505050565b6003602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b600a54610100900460ff1690565b600c546001600160a01b031681565b30611d27612b79565b6001600160a01b031614611d6c5760405162461bcd60e51b815260040180806020018281038252602681526020018061428e6026913960400191505060405180910390fd5b611d7884848484613949565b50505050565b6001600160a01b031660009081526005602052604090205490565b611da1612b79565b6000546001600160a01b03908116911614611df1576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600080546040516001600160a01b0390911690600080516020614423833981519152908390a3600080546001600160a01b0319169055565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f8101839004830284018301909452838352919290830182828015611ebb5780601f10611e9057610100808354040283529160200191611ebb565b820191906000526020600020905b815481529060010190602001808311611e9e57829003601f168201915b505050505081565b600b5481565b6000546001600160a01b031690565b6000611ee26117bb565b905090565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156115475780601f1061151c57610100808354040283529160200191611547565b611f50612b79565b6000546001600160a01b03908116911614611fa0576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b612710821115611fe7576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174696f60981b604482015290519081900360640190fd5b600b829055600c80546001600160a01b0383166001600160a01b031990911681179091556040805184815290517fe44b090966c483a5d3083af2aea49d8d120dcc0aba24e70a44cdccc4beec79fc9181900360200190a25050565b61204a612b79565b6000546001600160a01b0390811691161461209a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600081116120ee576040805162461bcd60e51b815260206004820152601c60248201527b131e905c1c0e881a5b9d985b1a590817d91cdd11d85cd05b5bdd5b9d60221b604482015290519081900360640190fd5b61ffff8316600081815260026020908152604080832086845282529182902084905581519283528201849052818101839052517f15ceea62cfa597b29eb911525932c57500d97da953485d24260680ae56903b689181900360600190a1505050565b61271081565b6000611658612163612b79565b846118d285604051806060016040528060258152602001614562602591396006600061218d612b79565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190613305565b60006116586121cb612b79565b84846131ba565b600181565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e546001600160a01b031681565b612212612b79565b6000546001600160a01b03908116911614612262576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cbed8b9c86868686866040518663ffffffff1660e01b8152600401808661ffff1681526020018561ffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561231457600080fd5b505af1158015612328573d6000803e3d6000fd5b505050505050505050565b61233b61370b565b6000612346836127b3565b9050803410156123875760405162461bcd60e51b815260040180806020018281038252602a815260200180614443602a913960400191505060405180910390fd5b600c546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156123c1573d6000803e3d6000fd5b506124256123cd612b79565b836123d6612b79565b60405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040528661240a612b79565b6040805160208101909152600080825290611cbe348a61375a565b505050565b61ffff84166000908152600360209081526040808320905186519192879282918401908083835b602083106124705780518252601f199092019160209182019101612451565b51815160001960209485036101000a01908116901991909116179052920194855250604080519485900382019094206001600160401b03881660009081529152929092205492505050806124f55760405162461bcd60e51b81526004018080602001828103825260238152602001806143416023913960400191505060405180910390fd5b8151602083012081146125395760405162461bcd60e51b81526004018080602001828103825260218152602001806144f76021913960400191505060405180910390fd5b61ffff85166000908152600360209081526040808320905187519192889282918401908083835b6020831061257f5780518252601f199092019160209182019101612560565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160401b03891660009081529152929092209290925550611474905085858585613949565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b61262b612b79565b6000546001600160a01b0390811691161461267b576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b6004805482151560ff19909116811790915560408051918252517f1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a49181900360200190a150565b6126ca612b79565b6000546001600160a01b0390811691161461271a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b61ffff831660009081526001602052604090206127389083836141ec565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051808461ffff168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a1505050565b60045460ff1681565b600e546000906001600160a01b03166127ce575060006114b6565b600e54604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e916004808301926020929190829003018186803b15801561281357600080fd5b505afa158015612827573d6000803e3d6000fd5b505050506040513d602081101561283d57600080fd5b5051600e546040805163313ce56760e01b815290519293506000926001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561288a57600080fd5b505afa15801561289e573d6000803e3d6000fd5b505050506040513d60208110156128b457600080fd5b5051600a80549192506000916128f59160ff909116810a906128e990670de0b6b3a7640000906128ef9087900a838b8a613acc565b90613b25565b90613acc565b90506129126127106128e9600b5484613acc90919063ffffffff16565b95945050505050565b612923612b79565b6000546001600160a01b03908116911614612973576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b6001600160a01b0381166129b85760405162461bcd60e51b81526004018080602001828103825260268152602001806142f96026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602061442383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60408051633d7b2f6f60e21b815261ffff8087166004830152851660248201523060448201526064810183905290516060916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163f5ecbdbc91608480820192600092909190829003018186803b158015612a8457600080fd5b505afa158015612a98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612ac157600080fd5b8101908080516040519392919084600160201b821115612ae057600080fd5b908301906020820185811115612af557600080fd5b8251600160201b811182820188101715612b0e57600080fd5b82525081516020918201929091019080838360005b83811015612b3b578181015183820152602001612b23565b50505050905090810190601f168015612b685780820380516001836020036101000a031916815260200191505b506040525050509050949350505050565b3390565b306001600160a01b03166366ad5c8a858585856040518563ffffffff1660e01b8152600401808561ffff16815260200180602001846001600160401b0316815260200180602001838103835286818151815260200191508051906020019080838360005b83811015612bf9578181015183820152602001612be1565b50505050905090810190601f168015612c265780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612c59578181015183820152602001612c41565b50505050905090810190601f168015612c865780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015612ca957600080fd5b505af1925050508015612cba575060015b611d785761ffff84166000908152600360209081526040808320905186519192879282918401908083835b60208310612d045780518252601f199092019160209182019101612ce5565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160401b038816600090815291529290922054929092149150612d58905057600080fd5b8080519060200120600360008661ffff1661ffff168152602001908152602001600020846040518082805190602001908083835b60208310612dab5780518252601f199092019160209182019101612d8c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000846001600160401b03166001600160401b03168152602001908152602001600020819055507fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d84848484604051808561ffff16815260200180602001846001600160401b0316815260200180602001838103835286818151815260200191508051906020019080838360005b83811015612e84578181015183820152602001612e6c565b50505050905090810190601f168015612eb15780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612ee4578181015183820152602001612ecc565b50505050905090810190601f168015612f115780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1611d78565b60006001600160e01b031982166301d1d13560e71b14806114b357506114b382613b64565b6001600160a01b038316612f915760405162461bcd60e51b81526004018080602001828103825260248152602001806144d36024913960400191505060405180910390fd5b6001600160a01b038216612fd65760405162461bcd60e51b815260040180806020018281038252602281526020018061431f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b7f00000000000000000000000000000000000000000000000000000000000000008111156130a2576040805162461bcd60e51b8152602060048201526012602482015271195e18d959591cc81b585e08185b5bdd5b9d60721b604482015290519081900360640190fd5b6130ac8282613b7d565b6130b46117bb565b7f0000000000000000000000000000000000000000000000000000000000000000101561311d576040805162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b604482015290519081900360640190fd5b5050565b613129613c5d565b600a805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61315d612b79565b604080516001600160a01b039092168252519081900360200190a1565b61318261370b565b600a805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861315d612b79565b6001600160a01b0383166131ff5760405162461bcd60e51b81526004018080602001828103825260258152602001806144ae6025913960400191505060405180910390fd5b6001600160a01b0382166132445760405162461bcd60e51b81526004018080602001828103825260238152602001806142b46023913960400191505060405180910390fd5b61324f838383612425565b61328c81604051806060016040528060268152602001614364602691396001600160a01b0386166000908152600560205260409020549190613305565b6001600160a01b0380851660009081526005602052604080822093909355908416815220546132bb90826135c2565b6001600160a01b03808416600081815260056020908152604091829020949094558051858152905191939287169260008051602061446d83398151915292918290030190a3505050565b600081848411156133945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613359578181015183820152602001613341565b50505050905090810190601f1680156133865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080600086866040516020018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156133e95781810151838201526020016133d1565b50505050905090810190601f1680156134165780820380516001836020036101000a031916815260200191505b50935050505060405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340a7bb1089308489896040518663ffffffff1660e01b8152600401808661ffff168152602001856001600160a01b0316815260200180602001841515815260200180602001838103835286818151815260200191508051906020019080838360005b838110156134d25781810151838201526020016134ba565b50505050905090810190601f1680156134ff5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561353257818101518382015260200161351a565b50505050905090810190601f16801561355f5780820380516001836020036101000a031916815260200191505b50975050505050505050604080518083038186803b15801561358057600080fd5b505afa158015613594573d6000803e3d6000fd5b505050506040513d60408110156135aa57600080fd5b50805160209091015190999098509650505050505050565b60008282018381101561361a576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166136665760405162461bcd60e51b815260040180806020018281038252602181526020018061448d6021913960400191505060405180910390fd5b61367282600083612425565b6136af816040518060600160405280602281526020016142d7602291396001600160a01b0385166000908152600560205260409020549190613305565b6001600160a01b0383166000908152600560205260409020556007546136d5908261375a565b6007556040805182815290516000916001600160a01b0385169160008051602061446d8339815191529181900360200190a35050565b613713611d01565b15613758576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b565b600061361a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613305565b6137a888888888613cad565b600086866040516020018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156137f25781810151838201526020016137da565b50505050905090810190601f16801561381f5780820380516001836020036101000a031916815260200191505b5060408051601f1981840301815291905260045490955060ff161593506138579250505057613852886001856000613cc1565b613895565b8251156138955760405162461bcd60e51b81526004018080602001828103825260248152602001806145186024913960400191505060405180910390fd5b6138a3888287878787613da8565b866040518082805190602001908083835b602083106138d35780518252601f1990920191602091820191016138b4565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208c835293519395506001600160a01b038f16945061ffff8e16937f39a4c66499bcf4b56d79f0dde8ed7a9d4925a0df55825206b2b8531e202be0d09350918290030190a4505050505050505050565b60008082806020019051604081101561396157600080fd5b8101908080516040519392919084600160201b82111561398057600080fd5b90830190602082018581111561399557600080fd5b8251600160201b8111828201881017156139ae57600080fd5b82525081516020918201929091019080838360005b838110156139db5781810151838201526020016139c3565b50505050905090810190601f168015613a085780820380516001836020036101000a031916815260200191505b506040526020015160148401519395509350613a299150889050828461406a565b806001600160a01b0316866040518082805190602001908083835b60208310613a635780518252601f199092019160209182019101613a44565b51815160209384036101000a600019018019909216911617905260408051929094018290038220898352935193955061ffff8e1694507f776434b505c7beb3db155c58df6c88985bf7c31730767e43ec773005059fed7a9391829003019150a450505050505050565b600082613adb5750600061165c565b82820282848281613ae857fe5b041461361a5760405162461bcd60e51b81526004018080602001828103825260218152602001806143ba6021913960400191505060405180910390fd5b600061361a83836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b815250614074565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b038216613bd8576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b613be460008383612425565b600754613bf190826135c2565b6007556001600160a01b038216600090815260056020526040902054613c1790826135c2565b6001600160a01b038316600081815260056020908152604080832094909455835185815293519293919260008051602061446d8339815191529281900390910190a35050565b613c65611d01565b613758576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b613cb561370b565b611d78848484846140d9565b6000613ccc83614113565b61ffff8616600090815260026020908152604080832088845290915281205491925090613cf990846135c2565b905060008111613d4d576040805162461bcd60e51b815260206004820152601a602482015279131e905c1c0e881b5a5b91d85cd31a5b5a5d081b9bdd081cd95d60321b604482015290519081900360640190fd5b80821015613da0576040805162461bcd60e51b815260206004820152601b60248201527a4c7a4170703a20676173206c696d697420697320746f6f206c6f7760281b604482015290519081900360640190fd5b505050505050565b61ffff8616600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f810184900484028501840190925281845291830182828015613e3c5780601f10613e1157610100808354040283529160200191613e3c565b820191906000526020600020905b815481529060010190602001808311613e1f57829003601f168201915b50505050509050805160001415613e845760405162461bcd60e51b815260040180806020018281038252603081526020018061438a6030913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c58031008389848a8a8a8a6040518863ffffffff1660e01b8152600401808761ffff1681526020018060200180602001866001600160a01b03168152602001856001600160a01b0316815260200180602001848103845289818151815260200191508051906020019080838360005b83811015613f36578181015183820152602001613f1e565b50505050905090810190601f168015613f635780820380516001836020036101000a031916815260200191505b5084810383528851815288516020918201918a019080838360005b83811015613f96578181015183820152602001613f7e565b50505050905090810190601f168015613fc35780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015613ff6578181015183820152602001613fde565b50505050905090810190601f1680156140235780820380516001836020036101000a031916815260200191505b5099505050505050505050506000604051808303818588803b15801561404857600080fd5b505af115801561405c573d6000803e3d6000fd5b505050505050505050505050565b6124258282613038565b600081836140c35760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315613359578181015183820152602001613341565b5060008385816140cf57fe5b0495945050505050565b60006140e3612b79565b9050806001600160a01b0316856001600160a01b03161461410957614109858284614173565b6114748583613621565b600060228251101561416b576040805162461bcd60e51b815260206004820152601c60248201527b4c7a4170703a20696e76616c69642061646170746572506172616d7360201b604482015290519081900360640190fd5b506022015190565b600061417f84846125f8565b90506000198114611d7857818110156141df576040805162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015290519081900360640190fd5b611d788484848403612f4c565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826142225760008555614268565b82601f1061423b5782800160ff19823516178555614268565b82800160010185558215614268579182015b8281111561426857823582559160200191906001019061424d565b50614274929150614278565b5090565b5b80821115614274576000815560010161427956fe4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a41707045524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737361676545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04554482073656e74206973206e6f7420656e6f75676820666f722074686520666565207061796d656e74ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61644c7a4170703a205f61646170746572506172616d73206d75737420626520656d7074792e4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e747261637445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c5439b6c3f122293dac2d690f23c2bcf2130f1fe1a99c3ace2a10e930ef6c6c864736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061024e5760003560e01c80621d35671461025357806301ffc9a7146103a757806306fdde03146103ef578063078108671461047957806307e0db17146104bf578063095ea7b3146104ed57806310ddb137146105265780631249c58b1461055457806318160ddd146105695780631a3947951461057e578063239c70ae146105aa57806323b872dd146105bf5780632a205e3d14610602578063313ce5671461076a578063372aa2241461079557806339509351146107c85780633d8b38f6146108015780634162169f1461088757806342966c68146108b857806342d65a8d146108e25780634477051514610968578063519056361461097d5780635b8c41e614610ade5780635c975abb14610ba557806361d027b314610bba57806366ad5c8a14610bcf57806370a0823114610d21578063715018a614610d545780637533d78814610d6957806381b6949414610d975780638da5cb5b14610dac5780639358928b14610dc157806395d89b4114610dd6578063963c78dd14610deb5780639b57db5f14610e245780639e93ad8e14610e5e578063a457c2d714610e73578063a9059cbb14610eac578063af3fb21c14610ee5578063b353aaa714610efa578063b888879e14610f0f578063cbed8b9c14610f24578063d052e6be14610fba578063d1deba1f14610fe1578063d5abeb0114611126578063dd62ed3e1461113b578063eab45d9c14611176578063eb8d72b7146111a2578063ed629c5c14611228578063f066bca91461123d578063f2fde38b14611267578063f5ecbdbc1461129a575b600080fd5b34801561025f57600080fd5b506103a56004803603608081101561027657600080fd5b61ffff8235169190810190604081016020820135600160201b81111561029b57600080fd5b8201836020820111156102ad57600080fd5b803590602001918460018302840111600160201b831117156102ce57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b81111561033157600080fd5b82018360208201111561034357600080fd5b803590602001918460018302840111600160201b8311171561036457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112e7945050505050565b005b3480156103b357600080fd5b506103db600480360360208110156103ca57600080fd5b50356001600160e01b03191661147b565b604080519115158252519081900360200190f35b3480156103fb57600080fd5b506104046114bb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561043e578181015183820152602001610426565b50505050905090810190601f16801561046b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561048557600080fd5b506104ad6004803603604081101561049c57600080fd5b5061ffff8135169060200135611551565b60408051918252519081900360200190f35b3480156104cb57600080fd5b506103a5600480360360208110156104e257600080fd5b503561ffff1661156e565b3480156104f957600080fd5b506103db6004803603604081101561051057600080fd5b506001600160a01b038135169060200135611644565b34801561053257600080fd5b506103a56004803603602081101561054957600080fd5b503561ffff16611662565b34801561056057600080fd5b506103a5611724565b34801561057557600080fd5b506104ad6117bb565b34801561058a57600080fd5b506103a5600480360360208110156105a157600080fd5b503515156117c1565b3480156105b657600080fd5b506104ad611836565b3480156105cb57600080fd5b506103db600480360360608110156105e257600080fd5b506001600160a01b0381358116916020810135909116906040013561185a565b34801561060e57600080fd5b50610751600480360360a081101561062557600080fd5b61ffff8235169190810190604081016020820135600160201b81111561064a57600080fd5b82018360208201111561065c57600080fd5b803590602001918460018302840111600160201b8311171561067d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956020860135151595919450925060608101915060400135600160201b8111156106dd57600080fd5b8201836020820111156106ef57600080fd5b803590602001918460018302840111600160201b8311171561071057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118e1945050505050565b6040805192835260208301919091528051918290030190f35b34801561077657600080fd5b5061077f611915565b6040805160ff9092168252519081900360200190f35b3480156107a157600080fd5b506103a5600480360360208110156107b857600080fd5b50356001600160a01b031661191e565b3480156107d457600080fd5b506103db600480360360408110156107eb57600080fd5b506001600160a01b0381351690602001356119c0565b34801561080d57600080fd5b506103db6004803603604081101561082457600080fd5b61ffff8235169190810190604081016020820135600160201b81111561084957600080fd5b82018360208201111561085b57600080fd5b803590602001918460018302840111600160201b8311171561087c57600080fd5b509092509050611a0e565b34801561089357600080fd5b5061089c611adf565b604080516001600160a01b039092168252519081900360200190f35b3480156108c457600080fd5b506103db600480360360208110156108db57600080fd5b5035611aee565b3480156108ee57600080fd5b506103a56004803603604081101561090557600080fd5b61ffff8235169190810190604081016020820135600160201b81111561092a57600080fd5b82018360208201111561093c57600080fd5b803590602001918460018302840111600160201b8311171561095d57600080fd5b509092509050611b02565b34801561097457600080fd5b506104ad611c16565b6103a5600480360360e081101561099357600080fd5b6001600160a01b038235169161ffff60208201351691810190606081016040820135600160201b8111156109c657600080fd5b8201836020820111156109d857600080fd5b803590602001918460018302840111600160201b831117156109f957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435956001600160a01b036020870135811696604081013590911695509193509150608081019060600135600160201b811115610a6a57600080fd5b820183602082011115610a7c57600080fd5b803590602001918460018302840111600160201b83111715610a9d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611c1b945050505050565b348015610aea57600080fd5b506104ad60048036036060811015610b0157600080fd5b61ffff8235169190810190604081016020820135600160201b811115610b2657600080fd5b820183602082011115610b3857600080fd5b803590602001918460018302840111600160201b83111715610b5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160401b03169150611ccd9050565b348015610bb157600080fd5b506103db611d01565b348015610bc657600080fd5b5061089c611d0f565b348015610bdb57600080fd5b506103a560048036036080811015610bf257600080fd5b61ffff8235169190810190604081016020820135600160201b811115610c1757600080fd5b820183602082011115610c2957600080fd5b803590602001918460018302840111600160201b83111715610c4a57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b811115610cad57600080fd5b820183602082011115610cbf57600080fd5b803590602001918460018302840111600160201b83111715610ce057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611d1e945050505050565b348015610d2d57600080fd5b506104ad60048036036020811015610d4457600080fd5b50356001600160a01b0316611d7e565b348015610d6057600080fd5b506103a5611d99565b348015610d7557600080fd5b5061040460048036036020811015610d8c57600080fd5b503561ffff16611e29565b348015610da357600080fd5b506104ad611ec3565b348015610db857600080fd5b5061089c611ec9565b348015610dcd57600080fd5b506104ad611ed8565b348015610de257600080fd5b50610404611ee7565b348015610df757600080fd5b506103a560048036036040811015610e0e57600080fd5b50803590602001356001600160a01b0316611f48565b348015610e3057600080fd5b506103a560048036036060811015610e4757600080fd5b5061ffff8135169060208101359060400135612042565b348015610e6a57600080fd5b506104ad612150565b348015610e7f57600080fd5b506103db60048036036040811015610e9657600080fd5b506001600160a01b038135169060200135612156565b348015610eb857600080fd5b506103db60048036036040811015610ecf57600080fd5b506001600160a01b0381351690602001356121be565b348015610ef157600080fd5b506104ad6121d2565b348015610f0657600080fd5b5061089c6121d7565b348015610f1b57600080fd5b5061089c6121fb565b348015610f3057600080fd5b506103a560048036036080811015610f4757600080fd5b61ffff823581169260208101359091169160408201359190810190608081016060820135600160201b811115610f7c57600080fd5b820183602082011115610f8e57600080fd5b803590602001918460018302840111600160201b83111715610faf57600080fd5b50909250905061220a565b6103a560048036036040811015610fd057600080fd5b508035906020013561ffff16612333565b6103a560048036036080811015610ff757600080fd5b61ffff8235169190810190604081016020820135600160201b81111561101c57600080fd5b82018360208201111561102e57600080fd5b803590602001918460018302840111600160201b8311171561104f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160401b03853516959094909350604081019250602001359050600160201b8111156110b257600080fd5b8201836020820111156110c457600080fd5b803590602001918460018302840111600160201b831117156110e557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061242a945050505050565b34801561113257600080fd5b506104ad6125d4565b34801561114757600080fd5b506104ad6004803603604081101561115e57600080fd5b506001600160a01b03813581169160200135166125f8565b34801561118257600080fd5b506103a56004803603602081101561119957600080fd5b50351515612623565b3480156111ae57600080fd5b506103a5600480360360408110156111c557600080fd5b61ffff8235169190810190604081016020820135600160201b8111156111ea57600080fd5b8201836020820111156111fc57600080fd5b803590602001918460018302840111600160201b8311171561121d57600080fd5b5090925090506126c2565b34801561123457600080fd5b506103db6127aa565b34801561124957600080fd5b506104ad6004803603602081101561126057600080fd5b50356127b3565b34801561127357600080fd5b506103a56004803603602081101561128a57600080fd5b50356001600160a01b031661291b565b3480156112a657600080fd5b50610404600480360360808110156112bd57600080fd5b5061ffff81358116916020810135909116906001600160a01b036040820135169060600135612a01565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611319612b79565b6001600160a01b031614611374576040805162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c65720000604482015290519081900360640190fd5b61ffff8416600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f8101849004840285018401909252818452918301828280156114085780601f106113dd57610100808354040283529160200191611408565b820191906000526020600020905b8154815290600101906020018083116113eb57829003601f168201915b505050505090508051845114801561142d575080805190602001208480519060200120145b6114685760405162461bcd60e51b815260040180806020018281038252602681526020018061453c6026913960400191505060405180910390fd5b61147485858585612b7d565b5050505050565b60006001600160e01b0319821615806114a457506001600160e01b031982166336372b0760e01b145b806114b357506114b382612f27565b90505b919050565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156115475780601f1061151c57610100808354040283529160200191611547565b820191906000526020600020905b81548152906001019060200180831161152a57829003601f168201915b5050505050905090565b600260209081526000928352604080842090915290825290205481565b611576612b79565b6000546001600160a01b039081169116146115c6576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166307e0db17826040518263ffffffff1660e01b8152600401808261ffff168152602001915050600060405180830381600087803b15801561163057600080fd5b505af1158015611474573d6000803e3d6000fd5b6000611658611651612b79565b8484612f4c565b5060015b92915050565b61166a612b79565b6000546001600160a01b039081169116146116ba576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310ddb137826040518263ffffffff1660e01b8152600401808261ffff168152602001915050600060405180830381600087803b15801561163057600080fd5b600a5462010000900460ff1615611772576040805162461bcd60e51b815260206004820152600d60248201526c1b5a5b9d08191a5cd8589b1959609a1b604482015290519081900360640190fd5b600d546117a8906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000613038565b600a805462ff0000191662010000179055565b60075490565b6117c9612b79565b6000546001600160a01b03908116911614611819576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b8061182b57611826613121565b611833565b61183361317a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006118678484846131ba565b6118d784611873612b79565b6118d2856040518060600160405280602881526020016143db602891396001600160a01b038a166000908152600660205260408120906118b1612b79565b6001600160a01b031681526020810191909152604001600020549190613305565b612f4c565b5060019392505050565b6000806118f1878787878761339c565b9092509050611909611902866127b3565b83906135c2565b91509550959350505050565b600a5460ff1690565b611926612b79565b6000546001600160a01b03908116911614611976576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517fb266add5f3044b17d27db796af992cecbe413921b4e8aaaee03c719e16b9806a90600090a250565b60006116586119cd612b79565b846118d285600660006119de612b79565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906135c2565b61ffff8316600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f8101849004840285018401909252818452849392909190830182828015611aa75780601f10611a7c57610100808354040283529160200191611aa7565b820191906000526020600020905b815481529060010190602001808311611a8a57829003601f168201915b505050505090508383604051808383808284376040519201829003909120855160209096019590952090941498975050505050505050565b600d546001600160a01b031681565b6000611afa3383613621565b506001919050565b611b0a612b79565b6000546001600160a01b03908116911614611b5a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b604080516342d65a8d60e01b815261ffff85166004820190815260248201928352604482018490526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926342d65a8d92879287928792606401848480828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b158015611bf957600080fd5b505af1158015611c0d573d6000803e3d6000fd5b50505050505050565b600081565b611c2361370b565b6000611c2e856127b3565b905080341015611c6f5760405162461bcd60e51b815260040180806020018281038252602a815260200180614443602a913960400191505060405180910390fd5b600c546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611ca9573d6000803e3d6000fd5b50611cc388888888888888611cbe348a61375a565b61379c565b5050505050505050565b6003602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b600a54610100900460ff1690565b600c546001600160a01b031681565b30611d27612b79565b6001600160a01b031614611d6c5760405162461bcd60e51b815260040180806020018281038252602681526020018061428e6026913960400191505060405180910390fd5b611d7884848484613949565b50505050565b6001600160a01b031660009081526005602052604090205490565b611da1612b79565b6000546001600160a01b03908116911614611df1576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600080546040516001600160a01b0390911690600080516020614423833981519152908390a3600080546001600160a01b0319169055565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f8101839004830284018301909452838352919290830182828015611ebb5780601f10611e9057610100808354040283529160200191611ebb565b820191906000526020600020905b815481529060010190602001808311611e9e57829003601f168201915b505050505081565b600b5481565b6000546001600160a01b031690565b6000611ee26117bb565b905090565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156115475780601f1061151c57610100808354040283529160200191611547565b611f50612b79565b6000546001600160a01b03908116911614611fa0576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b612710821115611fe7576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174696f60981b604482015290519081900360640190fd5b600b829055600c80546001600160a01b0383166001600160a01b031990911681179091556040805184815290517fe44b090966c483a5d3083af2aea49d8d120dcc0aba24e70a44cdccc4beec79fc9181900360200190a25050565b61204a612b79565b6000546001600160a01b0390811691161461209a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b600081116120ee576040805162461bcd60e51b815260206004820152601c60248201527b131e905c1c0e881a5b9d985b1a590817d91cdd11d85cd05b5bdd5b9d60221b604482015290519081900360640190fd5b61ffff8316600081815260026020908152604080832086845282529182902084905581519283528201849052818101839052517f15ceea62cfa597b29eb911525932c57500d97da953485d24260680ae56903b689181900360600190a1505050565b61271081565b6000611658612163612b79565b846118d285604051806060016040528060258152602001614562602591396006600061218d612b79565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190613305565b60006116586121cb612b79565b84846131ba565b600181565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e546001600160a01b031681565b612212612b79565b6000546001600160a01b03908116911614612262576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cbed8b9c86868686866040518663ffffffff1660e01b8152600401808661ffff1681526020018561ffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561231457600080fd5b505af1158015612328573d6000803e3d6000fd5b505050505050505050565b61233b61370b565b6000612346836127b3565b9050803410156123875760405162461bcd60e51b815260040180806020018281038252602a815260200180614443602a913960400191505060405180910390fd5b600c546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156123c1573d6000803e3d6000fd5b506124256123cd612b79565b836123d6612b79565b60405160200180826001600160a01b031660601b81526014019150506040516020818303038152906040528661240a612b79565b6040805160208101909152600080825290611cbe348a61375a565b505050565b61ffff84166000908152600360209081526040808320905186519192879282918401908083835b602083106124705780518252601f199092019160209182019101612451565b51815160001960209485036101000a01908116901991909116179052920194855250604080519485900382019094206001600160401b03881660009081529152929092205492505050806124f55760405162461bcd60e51b81526004018080602001828103825260238152602001806143416023913960400191505060405180910390fd5b8151602083012081146125395760405162461bcd60e51b81526004018080602001828103825260218152602001806144f76021913960400191505060405180910390fd5b61ffff85166000908152600360209081526040808320905187519192889282918401908083835b6020831061257f5780518252601f199092019160209182019101612560565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160401b03891660009081529152929092209290925550611474905085858585613949565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b61262b612b79565b6000546001600160a01b0390811691161461267b576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b6004805482151560ff19909116811790915560408051918252517f1584ad594a70cbe1e6515592e1272a987d922b097ead875069cebe8b40c004a49181900360200190a150565b6126ca612b79565b6000546001600160a01b0390811691161461271a576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b61ffff831660009081526001602052604090206127389083836141ec565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab838383604051808461ffff168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a1505050565b60045460ff1681565b600e546000906001600160a01b03166127ce575060006114b6565b600e54604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e916004808301926020929190829003018186803b15801561281357600080fd5b505afa158015612827573d6000803e3d6000fd5b505050506040513d602081101561283d57600080fd5b5051600e546040805163313ce56760e01b815290519293506000926001600160a01b039092169163313ce56791600480820192602092909190829003018186803b15801561288a57600080fd5b505afa15801561289e573d6000803e3d6000fd5b505050506040513d60208110156128b457600080fd5b5051600a80549192506000916128f59160ff909116810a906128e990670de0b6b3a7640000906128ef9087900a838b8a613acc565b90613b25565b90613acc565b90506129126127106128e9600b5484613acc90919063ffffffff16565b95945050505050565b612923612b79565b6000546001600160a01b03908116911614612973576040805162461bcd60e51b81526020600482018190526024820152600080516020614403833981519152604482015290519081900360640190fd5b6001600160a01b0381166129b85760405162461bcd60e51b81526004018080602001828103825260268152602001806142f96026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602061442383398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60408051633d7b2f6f60e21b815261ffff8087166004830152851660248201523060448201526064810183905290516060916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163f5ecbdbc91608480820192600092909190829003018186803b158015612a8457600080fd5b505afa158015612a98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612ac157600080fd5b8101908080516040519392919084600160201b821115612ae057600080fd5b908301906020820185811115612af557600080fd5b8251600160201b811182820188101715612b0e57600080fd5b82525081516020918201929091019080838360005b83811015612b3b578181015183820152602001612b23565b50505050905090810190601f168015612b685780820380516001836020036101000a031916815260200191505b506040525050509050949350505050565b3390565b306001600160a01b03166366ad5c8a858585856040518563ffffffff1660e01b8152600401808561ffff16815260200180602001846001600160401b0316815260200180602001838103835286818151815260200191508051906020019080838360005b83811015612bf9578181015183820152602001612be1565b50505050905090810190601f168015612c265780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612c59578181015183820152602001612c41565b50505050905090810190601f168015612c865780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015612ca957600080fd5b505af1925050508015612cba575060015b611d785761ffff84166000908152600360209081526040808320905186519192879282918401908083835b60208310612d045780518252601f199092019160209182019101612ce5565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160401b038816600090815291529290922054929092149150612d58905057600080fd5b8080519060200120600360008661ffff1661ffff168152602001908152602001600020846040518082805190602001908083835b60208310612dab5780518252601f199092019160209182019101612d8c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000846001600160401b03166001600160401b03168152602001908152602001600020819055507fe6f254030bcb01ffd20558175c13fcaed6d1520be7becee4c961b65f79243b0d84848484604051808561ffff16815260200180602001846001600160401b0316815260200180602001838103835286818151815260200191508051906020019080838360005b83811015612e84578181015183820152602001612e6c565b50505050905090810190601f168015612eb15780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612ee4578181015183820152602001612ecc565b50505050905090810190601f168015612f115780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1611d78565b60006001600160e01b031982166301d1d13560e71b14806114b357506114b382613b64565b6001600160a01b038316612f915760405162461bcd60e51b81526004018080602001828103825260248152602001806144d36024913960400191505060405180910390fd5b6001600160a01b038216612fd65760405162461bcd60e51b815260040180806020018281038252602281526020018061431f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b7f00000000000000000000000000000000000000000000000000000000000000008111156130a2576040805162461bcd60e51b8152602060048201526012602482015271195e18d959591cc81b585e08185b5bdd5b9d60721b604482015290519081900360640190fd5b6130ac8282613b7d565b6130b46117bb565b7f0000000000000000000000000000000000000000000000000000000000000000101561311d576040805162461bcd60e51b815260206004820152601260248201527165786365656473206d617820737570706c7960701b604482015290519081900360640190fd5b5050565b613129613c5d565b600a805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61315d612b79565b604080516001600160a01b039092168252519081900360200190a1565b61318261370b565b600a805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861315d612b79565b6001600160a01b0383166131ff5760405162461bcd60e51b81526004018080602001828103825260258152602001806144ae6025913960400191505060405180910390fd5b6001600160a01b0382166132445760405162461bcd60e51b81526004018080602001828103825260238152602001806142b46023913960400191505060405180910390fd5b61324f838383612425565b61328c81604051806060016040528060268152602001614364602691396001600160a01b0386166000908152600560205260409020549190613305565b6001600160a01b0380851660009081526005602052604080822093909355908416815220546132bb90826135c2565b6001600160a01b03808416600081815260056020908152604091829020949094558051858152905191939287169260008051602061446d83398151915292918290030190a3505050565b600081848411156133945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613359578181015183820152602001613341565b50505050905090810190601f1680156133865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600080600086866040516020018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156133e95781810151838201526020016133d1565b50505050905090810190601f1680156134165780820380516001836020036101000a031916815260200191505b50935050505060405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166340a7bb1089308489896040518663ffffffff1660e01b8152600401808661ffff168152602001856001600160a01b0316815260200180602001841515815260200180602001838103835286818151815260200191508051906020019080838360005b838110156134d25781810151838201526020016134ba565b50505050905090810190601f1680156134ff5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561353257818101518382015260200161351a565b50505050905090810190601f16801561355f5780820380516001836020036101000a031916815260200191505b50975050505050505050604080518083038186803b15801561358057600080fd5b505afa158015613594573d6000803e3d6000fd5b505050506040513d60408110156135aa57600080fd5b50805160209091015190999098509650505050505050565b60008282018381101561361a576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166136665760405162461bcd60e51b815260040180806020018281038252602181526020018061448d6021913960400191505060405180910390fd5b61367282600083612425565b6136af816040518060600160405280602281526020016142d7602291396001600160a01b0385166000908152600560205260409020549190613305565b6001600160a01b0383166000908152600560205260409020556007546136d5908261375a565b6007556040805182815290516000916001600160a01b0385169160008051602061446d8339815191529181900360200190a35050565b613713611d01565b15613758576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b565b600061361a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613305565b6137a888888888613cad565b600086866040516020018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156137f25781810151838201526020016137da565b50505050905090810190601f16801561381f5780820380516001836020036101000a031916815260200191505b5060408051601f1981840301815291905260045490955060ff161593506138579250505057613852886001856000613cc1565b613895565b8251156138955760405162461bcd60e51b81526004018080602001828103825260248152602001806145186024913960400191505060405180910390fd5b6138a3888287878787613da8565b866040518082805190602001908083835b602083106138d35780518252601f1990920191602091820191016138b4565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208c835293519395506001600160a01b038f16945061ffff8e16937f39a4c66499bcf4b56d79f0dde8ed7a9d4925a0df55825206b2b8531e202be0d09350918290030190a4505050505050505050565b60008082806020019051604081101561396157600080fd5b8101908080516040519392919084600160201b82111561398057600080fd5b90830190602082018581111561399557600080fd5b8251600160201b8111828201881017156139ae57600080fd5b82525081516020918201929091019080838360005b838110156139db5781810151838201526020016139c3565b50505050905090810190601f168015613a085780820380516001836020036101000a031916815260200191505b506040526020015160148401519395509350613a299150889050828461406a565b806001600160a01b0316866040518082805190602001908083835b60208310613a635780518252601f199092019160209182019101613a44565b51815160209384036101000a600019018019909216911617905260408051929094018290038220898352935193955061ffff8e1694507f776434b505c7beb3db155c58df6c88985bf7c31730767e43ec773005059fed7a9391829003019150a450505050505050565b600082613adb5750600061165c565b82820282848281613ae857fe5b041461361a5760405162461bcd60e51b81526004018080602001828103825260218152602001806143ba6021913960400191505060405180910390fd5b600061361a83836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b815250614074565b6001600160e01b031981166301ffc9a760e01b14919050565b6001600160a01b038216613bd8576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b613be460008383612425565b600754613bf190826135c2565b6007556001600160a01b038216600090815260056020526040902054613c1790826135c2565b6001600160a01b038316600081815260056020908152604080832094909455835185815293519293919260008051602061446d8339815191529281900390910190a35050565b613c65611d01565b613758576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b613cb561370b565b611d78848484846140d9565b6000613ccc83614113565b61ffff8616600090815260026020908152604080832088845290915281205491925090613cf990846135c2565b905060008111613d4d576040805162461bcd60e51b815260206004820152601a602482015279131e905c1c0e881b5a5b91d85cd31a5b5a5d081b9bdd081cd95d60321b604482015290519081900360640190fd5b80821015613da0576040805162461bcd60e51b815260206004820152601b60248201527a4c7a4170703a20676173206c696d697420697320746f6f206c6f7760281b604482015290519081900360640190fd5b505050505050565b61ffff8616600090815260016020818152604080842080548251600295821615610100026000190190911694909404601f810184900484028501840190925281845291830182828015613e3c5780601f10613e1157610100808354040283529160200191613e3c565b820191906000526020600020905b815481529060010190602001808311613e1f57829003601f168201915b50505050509050805160001415613e845760405162461bcd60e51b815260040180806020018281038252603081526020018061438a6030913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c58031008389848a8a8a8a6040518863ffffffff1660e01b8152600401808761ffff1681526020018060200180602001866001600160a01b03168152602001856001600160a01b0316815260200180602001848103845289818151815260200191508051906020019080838360005b83811015613f36578181015183820152602001613f1e565b50505050905090810190601f168015613f635780820380516001836020036101000a031916815260200191505b5084810383528851815288516020918201918a019080838360005b83811015613f96578181015183820152602001613f7e565b50505050905090810190601f168015613fc35780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b83811015613ff6578181015183820152602001613fde565b50505050905090810190601f1680156140235780820380516001836020036101000a031916815260200191505b5099505050505050505050506000604051808303818588803b15801561404857600080fd5b505af115801561405c573d6000803e3d6000fd5b505050505050505050505050565b6124258282613038565b600081836140c35760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315613359578181015183820152602001613341565b5060008385816140cf57fe5b0495945050505050565b60006140e3612b79565b9050806001600160a01b0316856001600160a01b03161461410957614109858284614173565b6114748583613621565b600060228251101561416b576040805162461bcd60e51b815260206004820152601c60248201527b4c7a4170703a20696e76616c69642061646170746572506172616d7360201b604482015290519081900360640190fd5b506022015190565b600061417f84846125f8565b90506000198114611d7857818110156141df576040805162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015290519081900360640190fd5b611d788484848403612f4c565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826142225760008555614268565b82601f1061423b5782800160ff19823516178555614268565b82800160010185558215614268579182015b8281111561426857823582559160200191906001019061424d565b50614274929150614278565b5090565b5b80821115614274576000815560010161427956fe4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a41707045524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737361676545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04554482073656e74206973206e6f7420656e6f75676820666f722074686520666565207061796d656e74ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61644c7a4170703a205f61646170746572506172616d73206d75737420626520656d7074792e4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e747261637445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c5439b6c3f122293dac2d690f23c2bcf2130f1fe1a99c3ace2a10e930ef6c6c864736f6c63430007060033",
  "devdoc": {
    "author": "Radiant Labs",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "bridge(uint256,uint16)": {
        "params": {
          "amt": "Amount of RDNT",
          "destChainId": "Destination chain ID"
        }
      },
      "burn(uint256)": {
        "params": {
          "_value": "is amount to burn"
        }
      },
      "circulatingSupply()": {
        "details": "returns the circulating amount of tokens on current chain"
      },
      "constructor": {
        "params": {
          "_dao": "dao address",
          "_endpoint": "LZ endpoint",
          "_fee": "fee ratio",
          "_maxMintAmount": "max token mint amount",
          "_maxSupply": "max token supply",
          "_symbol": "token symbol",
          "_tokenName": "token name",
          "_treasury": "treasury address"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getBridgeFee(uint256)": {
        "params": {
          "rdntAmount": "amount for bridge"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint()": {
        "details": "Can be called only once"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pauseBridge(bool)": {
        "params": {
          "pause": "option"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sendFrom(address,uint16,bytes,uint256,address,address,bytes)": {
        "details": "This adds extra bridge fees"
      },
      "setFeeInfo(uint256,address)": {
        "params": {
          "_fee": "ratio",
          "_treasury": "address"
        }
      },
      "setPriceProvider(address)": {
        "params": {
          "_priceProvider": "address"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Radiant Token",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FeeInfoUpdated(uint256,address)": {
        "notice": "Emitted when fee ratio is updated"
      },
      "PriceProviderUpdated(address)": {
        "notice": "Emitted when PriceProvider is updated"
      }
    },
    "kind": "user",
    "methods": {
      "FEE_DIVISOR()": {
        "notice": "Divisor for fee ratio, 100%"
      },
      "bridge(uint256,uint16)": {
        "notice": "Bridge token"
      },
      "burn(uint256)": {
        "notice": "Burn tokens of `msg.sender`"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "dao()": {
        "notice": "DAO address"
      },
      "estimateSendFee(uint16,bytes,uint256,bool,bytes)": {
        "notice": "Returns LZ fee + Bridge fee"
      },
      "fee_ratio()": {
        "notice": "Fee ratio for bridging"
      },
      "getBridgeFee(uint256)": {
        "notice": "Bridge fee amount"
      },
      "maxMintAmount()": {
        "notice": "Max mint amount of token"
      },
      "maxSupply()": {
        "notice": "Max supply of token"
      },
      "mint()": {
        "notice": "Mint tokens to dao"
      },
      "pauseBridge(bool)": {
        "notice": "Pause/Unpause operations"
      },
      "priceProvider()": {
        "notice": "PriceProvider address"
      },
      "sendFrom(address,uint16,bytes,uint256,address,address,bytes)": {
        "notice": "Bridge tokens"
      },
      "setFeeInfo(uint256,address)": {
        "notice": "Set fee info"
      },
      "setPriceProvider(address)": {
        "notice": "Set price provider"
      },
      "treasury()": {
        "notice": "Treasury address"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5437,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 21029,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "trustedRemoteLookup",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint16,t_bytes_storage)"
      },
      {
        "astId": 21035,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "minDstGasLookup",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 21427,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "failedMessages",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"
      },
      {
        "astId": 21737,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "useCustomAdapterParams",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4789,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4795,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_allowances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 4797,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 4799,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_name",
        "offset": 0,
        "slot": "8",
        "type": "t_string_storage"
      },
      {
        "astId": 4801,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_symbol",
        "offset": 0,
        "slot": "9",
        "type": "t_string_storage"
      },
      {
        "astId": 4803,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_decimals",
        "offset": 0,
        "slot": "10",
        "type": "t_uint8"
      },
      {
        "astId": 5556,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "_paused",
        "offset": 1,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 20479,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "minted",
        "offset": 2,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 20482,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "fee_ratio",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 20485,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "treasury",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 20488,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "dao",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 20491,
        "contract": "contracts/oft/RadiantOFT.sol:RadiantOFT",
        "label": "priceProvider",
        "offset": 0,
        "slot": "14",
        "type": "t_contract(IPriceProvider)12919"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_memory_ptr": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IPriceProvider)12919": {
        "encoding": "inplace",
        "label": "contract IPriceProvider",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_bytes_memory_ptr",
        "label": "mapping(bytes => mapping(uint64 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes32)"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"
      },
      "t_mapping(t_uint16,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint64,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}